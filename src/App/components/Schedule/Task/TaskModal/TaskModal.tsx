import React from 'react';
import * as styles from './TaskModal.module.css'
import {useAppDispatch, useAppSelector} from "@store/store";
import {Task} from "@types_app/task";
import {FiChevronLeft, FiMoreVertical} from "react-icons/fi";

const Row: React.FC<{ label: string; value?: string; rightIcon?: React.ReactNode; children?: React.ReactNode }> =
    ({label, value, rightIcon, children}) => (
        <div className={styles.row}>
          <span>{label}</span>
          {value && <span className={styles.value}>{value}</span>}
          {children}
          {rightIcon && <span className={styles.icon}>{rightIcon}</span>}
        </div>
    );

type Props = { task: Task; onClose: () => void };

const TaskModal: React.FC<Props> = ({task, onClose}) => {
  const global = useAppSelector(state => state.global);
  const dispatch = useAppDispatch();

  return (
      <div className={styles.backdrop} onClick={onClose}>
        <div className={styles.window} onClick={e => e.stopPropagation()}>
          {/* HEADER */}
          <header className={styles.head}>
            <button className={styles.back} onClick={onClose}><FiChevronLeft/> –ù–∞–∑–∞–¥</button>
            <span className={styles.title}>–î–µ—Ç–∞–ª–∏ –∑–∞–¥–∞—á–∏</span>
            <FiMoreVertical className={styles.menu}/>
          </header>

          {/* TITLE + DESCRIPTION */}
          <input className={styles.inputTitle} defaultValue={task.title}/>
          <textarea className={styles.inputDesc} rows={2} defaultValue={task.description || ''}/>

          {/* PARAMS */}
          <div className={styles.params}>
            <Row label="–ö–æ–º–Ω–∞—Ç–∞" value={task.room}/>
            <Row label="–ü–æ–≤—Ç–æ—Ä" value="–ö–∞–∂–¥—ã–µ 2 –Ω–µ–¥–µ–ª–∏" rightIcon="‚ñº"/>
            <Row label="–°—Ä–æ–∫">
              <button className={styles.dueBtn}>–ø–Ω, 5 –º–∞—è</button>
              <span className={styles.overdue}>–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ 1 –¥</span>
            </Row>
            <Row label="–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ">
              <input type="checkbox"/>
            </Row>
          </div>

          {/* LOCKED */}
          <button className={styles.locked}>–ù–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞—á—É üîí</button>

          {/* FOOTER */}
          <footer className={styles.footer}>
            <button className={styles.ok}>‚úì –í—ã–ø–æ–ª–Ω–∏—Ç—å</button>
            <button className={styles.skip}>‚Üí –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å</button>
          </footer>
        </div>
      </div>
  );
}

export default TaskModal;